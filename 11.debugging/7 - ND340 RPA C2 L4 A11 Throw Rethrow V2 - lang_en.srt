1
00:00:00,000 --> 00:00:03,780
In this example, we will do a division of two numbers and we'll

2
00:00:03,780 --> 00:00:07,425
check if either of the numbers are divisible or not.

3
00:00:07,425 --> 00:00:10,305
If not, we'll throw a business exception,

4
00:00:10,305 --> 00:00:12,420
then while hiding the exception,

5
00:00:12,420 --> 00:00:16,920
we'll check that if the first number is greater than the second number.

6
00:00:16,920 --> 00:00:19,980
If not, then we'll re-throw the same atom.

7
00:00:19,980 --> 00:00:23,145
Over here, we have used a try catch activity.

8
00:00:23,145 --> 00:00:27,405
In the try block we have used another try catch activity.

9
00:00:27,405 --> 00:00:29,595
Over here in the try activity,

10
00:00:29,595 --> 00:00:34,560
we are checking if the first number mod second number is equal to 0.

11
00:00:34,560 --> 00:00:39,845
We have created two variables of number 1 and number 2 of the type integer.

12
00:00:39,845 --> 00:00:44,225
Initially we have assigned the value 48 and 24.

13
00:00:44,225 --> 00:00:48,335
Now if the division mod is equal to 0,

14
00:00:48,335 --> 00:00:51,889
then we'll just print a message saying it is divisible.

15
00:00:51,889 --> 00:00:54,050
If demand is not equal to 0,

16
00:00:54,050 --> 00:00:57,935
then we'll throw a business exception and in the business exception,

17
00:00:57,935 --> 00:01:01,159
we'll say that the numbers are not divisible.

18
00:01:01,159 --> 00:01:03,370
Since now we are throwing the exception,

19
00:01:03,370 --> 00:01:05,900
the control will go to the catch block.

20
00:01:05,900 --> 00:01:09,095
Let us go and see what is there in the catch block.

21
00:01:09,095 --> 00:01:10,955
Here, in the catch block,

22
00:01:10,955 --> 00:01:14,900
we are printing out the exception and then we are again

23
00:01:14,900 --> 00:01:19,330
checking that if the first number is greater than the second number.

24
00:01:19,330 --> 00:01:25,060
If yes, then we'll say applicable or else we will re-throw an error.

25
00:01:25,060 --> 00:01:30,140
Now this re-throw will go to the catch activity of the parent try block.

26
00:01:30,140 --> 00:01:33,605
Over here we are just printing the exception that is;

27
00:01:33,605 --> 00:01:36,100
the number is not divisible.

28
00:01:36,100 --> 00:01:38,240
Let us run this workflow.

29
00:01:38,240 --> 00:01:40,970
Initially we are using 48 and 24,

30
00:01:40,970 --> 00:01:44,010
that means the mod is equal to 0.

31
00:01:46,330 --> 00:01:49,420
Let us check the output.

32
00:01:49,420 --> 00:01:53,195
Over here, it says divisible which is perfectly fine.

33
00:01:53,195 --> 00:01:57,650
Now, let us go ahead and change the value from the variables panel.

34
00:01:57,650 --> 00:02:01,880
Now, let us give a value which is greater than 24,

35
00:02:01,880 --> 00:02:04,910
but which is not mod of 0.

36
00:02:04,910 --> 00:02:08,720
For example, we will take the value as 25.

37
00:02:08,720 --> 00:02:10,280
Save the workflow.

38
00:02:10,280 --> 00:02:12,930
Now let us run the workflow.

39
00:02:13,400 --> 00:02:16,275
Let us open the output panel,

40
00:02:16,275 --> 00:02:20,179
and over here you can see we've got the exception.

41
00:02:20,179 --> 00:02:23,210
This exception is from re-throw activity.

42
00:02:23,210 --> 00:02:26,975
Now, after the activity has thrown an error,

43
00:02:26,975 --> 00:02:29,015
the control went to the catch block.

44
00:02:29,015 --> 00:02:33,020
In the catch block, we are checking if the number 1 is greater than number 2.

45
00:02:33,020 --> 00:02:35,645
Since the number 1 was greater than the number 2,

46
00:02:35,645 --> 00:02:37,925
record the message as applicable.

47
00:02:37,925 --> 00:02:40,580
Now, let us do the last modification.

48
00:02:40,580 --> 00:02:45,225
That is, let us consider a number which is smaller than the number 2.

49
00:02:45,225 --> 00:02:48,050
In our example, we'll put the number as 20.

50
00:02:48,050 --> 00:02:50,670
Now, let us run the workflow.

51
00:02:51,050 --> 00:02:55,610
Now, let us open the outward panel and see the output.

52
00:02:55,610 --> 00:02:58,865
Over here, since the mode is not equal to 0,

53
00:02:58,865 --> 00:03:02,900
the throw activity throws an error and this is the error that we got.

54
00:03:02,900 --> 00:03:06,350
Now since the number 1 is also smaller than

55
00:03:06,350 --> 00:03:11,405
the number 2 the re-throw activity is also throwing the same error.

56
00:03:11,405 --> 00:03:17,380
In this way, you can use the re-throw activity to throw the same error.

