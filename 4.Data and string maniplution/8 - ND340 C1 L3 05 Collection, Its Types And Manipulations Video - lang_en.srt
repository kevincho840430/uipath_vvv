1
00:00:00,000 --> 00:00:07,800
A collection is used to represent a set of similar data type items in a single unit,

2
00:00:07,800 --> 00:00:13,034
which is used for grouping and managing the objects.

3
00:00:13,034 --> 00:00:17,640
It is useful in cases when the user wants to extract

4
00:00:17,640 --> 00:00:22,185
the data in the Excel spreadsheet and the orchestrator queues.

5
00:00:22,185 --> 00:00:26,370
We will learn about the orchestrator queues in the coming courses.

6
00:00:26,370 --> 00:00:29,775
The different types of collections are;

7
00:00:29,775 --> 00:00:34,830
arrays, strings, lists, and dictionaries.

8
00:00:34,830 --> 00:00:39,140
We have discussed arrays and strings previously.

9
00:00:39,140 --> 00:00:43,195
We will be discussing lists and dictionaries here.

10
00:00:43,195 --> 00:00:49,130
Lists are data structures consisting of objects of the same data type,

11
00:00:49,130 --> 00:00:52,430
for example, string or integer.

12
00:00:52,430 --> 00:00:56,605
Each object has a fixed position in the list,

13
00:00:56,605 --> 00:01:01,250
because it can be accessed by an index value.

14
00:01:01,250 --> 00:01:07,260
While arrays are fixed sized structures for storing multiple objects,

15
00:01:07,260 --> 00:01:10,080
lists allows the user to add,

16
00:01:10,080 --> 00:01:13,230
insert and remove items.

17
00:01:13,230 --> 00:01:19,370
Lists are one of the simplest and most used collection data types.

18
00:01:19,370 --> 00:01:23,479
Lists can store large numbers of elements,

19
00:01:23,479 --> 00:01:28,150
such as names, numbers, time coordinates etc.

20
00:01:28,150 --> 00:01:32,810
Lists provides a specific methods of manipulation,

21
00:01:32,810 --> 00:01:36,485
such as adding and removing items,

22
00:01:36,485 --> 00:01:38,465
searching for an item,

23
00:01:38,465 --> 00:01:40,235
looping through the item,

24
00:01:40,235 --> 00:01:43,085
and then performing certain actions on them,

25
00:01:43,085 --> 00:01:49,505
sorting the object and extracting items and converting them to other data type.

26
00:01:49,505 --> 00:01:54,805
A dictionary is a collection of words and their meanings.

27
00:01:54,805 --> 00:01:59,235
Dictionaries consists of keys and values pair,

28
00:01:59,235 --> 00:02:02,610
in which the keys are unique.

29
00:02:02,610 --> 00:02:08,975
Here, key is equivalent to word and value is equivalent to a meaning.

30
00:02:08,975 --> 00:02:12,485
Example, address book in mobile phone,

31
00:02:12,485 --> 00:02:15,905
where each name has corresponding data,

32
00:02:15,905 --> 00:02:19,045
that is, the phone numbers and email.

33
00:02:19,045 --> 00:02:27,125
The data type for both key and value have to be chosen when the variable is instantiated.

34
00:02:27,125 --> 00:02:32,255
Datatype in dictionaries can be of the supported variables.

35
00:02:32,255 --> 00:02:38,915
The operation that are most often associated with dictionaries are;

36
00:02:38,915 --> 00:02:43,130
adding and deleting that has key value pair,

37
00:02:43,130 --> 00:02:46,820
retrieving the values associated with the key,

38
00:02:46,820 --> 00:02:51,365
and reassigning a new value to an existing key.

39
00:02:51,365 --> 00:02:57,940
Uipath studio offers the following methods for manipulating collections;

40
00:02:57,940 --> 00:03:01,050
The Foster's add to collection,

41
00:03:01,050 --> 00:03:04,715
it adds an item to a specified collection,

42
00:03:04,715 --> 00:03:08,165
it is equivalent to a list dot add method.

43
00:03:08,165 --> 00:03:14,695
Example, it can be used to add a new name to a list of company name.

44
00:03:14,695 --> 00:03:20,900
Remove from collection; it removes an item from a specified collection and

45
00:03:20,900 --> 00:03:26,975
can output of Boolean variable that confirms the factors of the removal operation.

46
00:03:26,975 --> 00:03:30,020
For example, it can be used to remove

47
00:03:30,020 --> 00:03:34,625
an invoice number from a list of invoices to be processed.

48
00:03:34,625 --> 00:03:37,225
The third is, exist.

49
00:03:37,225 --> 00:03:41,510
It indicates whether a given item is present in

50
00:03:41,510 --> 00:03:45,970
a given collection by outputting a Boolean as a result.

51
00:03:45,970 --> 00:03:52,940
Example, it can be used to check whether a list of client contains a specific name.

52
00:03:52,940 --> 00:03:55,565
The last is, clear collection;

53
00:03:55,565 --> 00:04:00,305
it clears a specified collection of all items.

54
00:04:00,305 --> 00:04:04,490
For example, it can be used to empty a collection

55
00:04:04,490 --> 00:04:10,920
before starting a new phase of a process that will populate it again.

